version: '3.8'

services:
  database:
    image: mysql:8.0
    container_name: database
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-}
      MYSQL_DATABASE: db_hotelsbook
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices
  hotel-api:
    build:
      context: ./hotel
      dockerfile: Dockerfile
    container_name: api
    env_file: .env
    environment:
      DB_URL: jdbc:mysql://database:3306/db_hotelsbook
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - microservices
  hotel-services-api:
    build:
      context: ./services
      dockerfile: Dockerfile
    container_name: hotel-services
    env_file: .env
    environment:
      DB_URL: jdbc:mysql://database:3306/db_hotelsbook
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8001:8001"
    networks:
      - microservices

  hotel-reviews-api:
    build:
      context: ./reviews
      dockerfile: Dockerfile
    container_name: hotel-reviews
    env_file: .env
    environment:
      DB_URL: jdbc:mysql://database:3306/db_hotelsbook
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8002:8002"
    networks:
      - microservices

networks:
  microservices:
    driver: bridge